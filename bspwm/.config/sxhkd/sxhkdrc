# vi: ft=sh
# filetype needed to set right comment style

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd && notify-send -i /usr/share/icons/Papirus-Dark/16x16/apps/administration.svg "sxhkd config" "Reloaded key bindings"

# reload polybar
super + shift + Escape
    pkill polybar && . $HOME/.config/polybar/launch.sh

# bspwm hotkeys
# ============================

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# toggle monocle layout
super + m
	bspc desktop -l next

# state/flags
# ----------------------------

# toggle tiled, pseudo_tiled, floating, fullscreen view
# NOTE the presence of ~
# if current state matches the given state, then the argument is
# interpreted as the last state.
super + {t,shift + space,space,f}
 	bspc node -t ~{tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + shift + {x,y,z}
	bspc node -g {locked,sticky,private}

# focus/swap
# ----------------------------

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# send and follow to given desktop	
super + ctrl + alt + {1-9}
    id=$(bspc query -N -n); bspc node -d ^{1-9}; bspc node -f ${id}

# focus on older/newer window in history
super + {o,n}
	bspc wm --record-history off; \
	bspc node --focus {older,newer}; \
    bspc wm --record-history on

# rotate desktop
super + {_,shift + }r
    bspc node @/ --rotate {90,-90}

# preselect
# ----------------------------

# preselect the direction
# cancel the preselection
# by pointing at given direction twice
super + ctrl + {h,j,k,l}
    bspc node --presel-dir '~{north,south,west,east}'

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# move/resize
# ----------------------------

# expand a window by moving one of its sides outward
super + alt + {h,j,k,l}
    bspc node @{west -r -10,south -r +10,north -r -10,east -r +10}

# contract a window by moving one of its sides inward
super + ctrl + alt + {h,j,k,l}
    bspc node @{east -r -10,north -r +10,south -r -10,west -r +10}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# make split ratios equal
super + equal
	bspc node @/ --equalize

# make split ratios balanced
super + minus
    bspc node @/ --balance

# custom key bindings
# ============================

# screenshots
Print
    scrot -u -z '%Y-%m-%d_%H:%M:%S_$wx$h$n.png' -e 'mv $f ~/Desktop' && notify-send -i /usr/share/icons/Papirus-Dark/16x16/apps/ksnapshot.svg "Window view screenshot" "Saved image to Desktop"
super + Print
    scrot -z '%Y-%m-%d_%H:%M:%S_$wx$h.png' -e 'mv $f ~/Desktop' && notify-send -i /usr/share/icons/Papirus-Dark/16x16/apps/ksnapshot.svg "Screen view screenshot" "Saved image to Desktop"

# screen brightness
XF86MonBrightness{Down,Up}
    xbacklight {-dec 15,-inc 15} 

# session
ctrl + alt + Delete
	bspc quit
ctrl + alt {r,End}
   systemctl {reboot,poweroff} 
{ctrl + alt + l,XF86ScreenSaver}
   mpc pause && i3lock -i ~/.lockscreen.png

# functionality
# ----------------------------

# switch between gap presets
super + alt + {y,u,i,o}
    bspc config window_gap {0,5,10,20}

# dynamic gaps
super + bracket{left,right}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 5 ))

# tempus theme switcher
# NOTE XXX must run `stow` for all my dotfiles
super + shift + t
    tempusmenu

# open interface for screencasting or stop recording
super + ctrl + {_,shift + }s
    {screencastmenu, own_script_ffmpeg_screencast rec_stop}

# media controls
# ----------------------------

# mpd
# alt + {a,s,d}
    # mpc {toggle,prev,next}
# XF86Audio{Play,Prev,Next}
    # mpc {toggle,prev,next}
alt + {a,s,d}
    mpc {toggle,prev && notify-send -i /usr/share/icons/Papirus-Dark/16x16/apps/musique.svg "Now Playing" "$(mpc --format '%artist% ~ %title% \[%album%\]' current)",next && notify-send -i /usr/share/icons/Papirus-Dark/16x16/apps/musique.svg "Now Playing" "$(mpc --format '%artist% ~ %title% \[%album%\]' current)"}
XF86Audio{Play,Prev,Next,Stop}
    mpc {toggle,prev && notify-send -i /usr/share/icons/Papirus-Dark/16x16/apps/musique.svg "Now Playing" "$(mpc --format '%artist% ~ %title% \[%album%\]' current)",next && notify-send -i /usr/share/icons/Papirus-Dark/16x16/apps/musique.svg "Now Playing" "$(mpc --format '%artist% ~ %title% \[%album%\]' current)",stop}

# speaker volume
alt + {z,x,c}
    amixer set Master {toggle,5%-,5%+}
XF86Audio{Mute,LowerVolume,RaiseVolume}
    amixer set Master {toggle,5%-,5%+}

# microphone volume
XF86AudioMicMute
    amixer set Capture toggle
super + XF86Audio{Mute,LowerVolume,RaiseVolume}
    amixer set Capture {toggle,5%-,5%+}

# launchers
# ----------------------------

# terminal emulator
super + Return
	urxvtc

# program launcher
# NOTE XXX must run `stow shell` and `stow bin` from my dotfiles
# runs dmenu using Xcolors defined as shell variables
super + d
    own_script_run_dmenu_xcolors

# passmenu
# NOTE XXX must run `stow shell` and `stow bin` from my dotfiles
# runs passmenu using Xcolors defined as shell variables
super + shift + d
    own_script_run_passmenu_xcolors

# common program
alt + 1
    firefox
alt + {2,3,4,5,6,7}
    urxvtc -e {ranger,newsboat,neomutt,rtv,ncmpcpp,podboat -a}
